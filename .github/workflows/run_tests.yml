name: Automated tests

on:
  workflow_dispatch:
    inputs:
      deployment_target:
        description: Choose target
        required: true
        default:
        type: choice
        options:
          - first_test
          - second_test

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  download-history:
    runs-on: ubuntu-latest
    name: Download history
    steps:
      - name: setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12.3"
      - run: >
          ARTIFACT_ID=$(curl -L   
          -H "Accept: application/vnd.github+json" 
          -H "X-GitHub-Api-Version: 2022-11-28" 
          "https://api.github.com/repos/chedan2038/api_actions/actions/artifacts?name=allure-results" 
          | python3 -c "import sys, json; print(json.load(sys.stdin)['artifacts'][0]['id']);") &&
          curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/chedan2038/api_actions/actions/artifacts/$ARTIFACT_ID/zip -o artifacts.zip

      - run: mkdir allure-results && unzip artifacts.zip -d allure-results
      - name: Store allure history
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results
          retention-days: 1
      

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12.3"
      - name: Install Chrome
        run: sudo apt-get install google-chrome-stable
      - name: Install dependencies
        run: pip install -r "requirements.txt"

      - name: Download all workflow artifacts
        uses: actions/download-artifact@v4

      - name: first_test
        if: "github.event.inputs.deployment_target == 'first_test'"
        run: pytest tests/test_all.py::test_get_all_objects --alluredir allure-results
      - name: second_test
        if: "github.event.inputs.deployment_target == 'second_test'"
        run: pytest tests/test_all.py::test_get_by_id --alluredir allure-results
      - name: Store allure results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results
          retention-days: 1

  generate-report:
    runs-on: ubuntu-latest
    needs: test
    name: Generate report
    steps:
      - uses: actions/setup-java@v4
        with:
          distribution: microsoft
          java-version: '17'
      - run: sudo wget https://github.com/allure-framework/allure2/releases/download/2.23.1/allure-2.23.1.tgz && sudo tar -zxvf allure-2.23.1.tgz -C /opt/ && sudo ln -s /opt/allure-2.23.1/bin/allure /usr/bin/allure
      - name: Download all workflow artifacts
        uses: actions/download-artifact@v4
      - run: allure generate -c allure-results -o _site
      - name: Store generated report
        uses: actions/upload-artifact@v4
        with:
          name: _site
          path: _site
          retention-days: 1

  publish-report:
    runs-on: ubuntu-latest
    needs: generate-report
    name: Report publication
    steps:
      - name: Download all workflow artifacts
        uses: actions/download-artifact@v4
      - name: Upload static files as artifact
        uses: actions/upload-pages-artifact@v4
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

