name: Automated tests

on:
  workflow_dispatch:
    inputs:
      deployment_target:
        description: Choose target
        required: true
        default: second_test
        type: choice
        options:
          - first_test
          - second_test
          - all

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  download-history:
    runs-on: ubuntu-latest
    name: Download history
    steps:
      - name: setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - run: |
          ARTIFACT_ID=$(curl -sL \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/chedan2038/api_actions/actions/artifacts?name=allure-results" \
            | python3 -c "import sys,json; d=json.load(sys.stdin); print(d.get('artifacts',[{}])[0].get('id',''))")
          if [ -n "$ARTIFACT_ID" ]; then
            curl -sL \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              "https://api.github.com/repos/chedan2038/api_actions/actions/artifacts/$ARTIFACT_ID/zip" \
              -o artifacts.zip
          fi

          REPORT_ID=$(curl -sL \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/chedan2038/api_actions/actions/artifacts?name=github-pages" \
            | python3 -c "import sys,json; d=json.load(sys.stdin); print(d.get('artifacts',[{}])[0].get('id',''))")
          if [ -n "$REPORT_ID" ]; then
            curl -sL \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              "https://api.github.com/repos/chedan2038/api_actions/actions/artifacts/$REPORT_ID/zip" \
              -o pages.zip
          fi

          mkdir -p allure-results old_pages pages_history
          [ -f artifacts.zip ] && unzip -q artifacts.zip -d allure-results
          [ -f pages.zip ] && unzip -q pages.zip -d old_pages && tar -xf old_pages/artifact.tar -C pages_history && cp -r pages_history/history allure-results || true

      - name: Store allure history
        uses: actions/upload-artifact@v4
        with:
          name: allure-history
          path: allure-results
          retention-days: 1

  test:
    runs-on: ubuntu-latest
    needs: download-history

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install Chrome
        run: sudo apt-get install google-chrome-stable
      - name: install dependencies
        run: pip install -r requirements.txt
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4
      - name: Run tests
        run: |
          if [ "${{ github.event.inputs.deployment_target }}" = "first_test" ]; then
            pytest tests/test_all.py::test_get_by_id --alluredir=allure-results
          elif [ "${{ github.event.inputs.deployment_target }}" = "second_test" ]; then
            pytest tests/test_all.py::test_get_all_objects --alluredir=allure-results
          else
            pytest --alluredir=allure-results
          fi
      - name: Store allure results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results
          retention-days: 1

  generate-report:
    runs-on: ubuntu-latest
    needs: test
    name: Generate report
    steps:
      - uses: actions/setup-java@v4
        with:
          distribution: 'microsoft'
          java-version: '17'
      - run: sudo wget https://github.com/allure-framework/allure2/releases/download/2.23.1/allure-2.23.1.tgz && sudo tar -zxvf allure-2.23.1.tgz -C /opt/ && sudo ln -s /opt/allure-2.23.1/bin/allure /usr/bin/allure
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4
      - run: allure generate -c allure-results -o _site
      - name: Store generated report
        uses: actions/upload-artifact@v4
        with:
          name: _site
          path: _site
          retention-days: 1

  publish-report:
    runs-on: ubuntu-latest
    needs: generate-report
    name: Report publication
    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v4
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
